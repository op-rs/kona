_docker_arch:
  #!/bin/bash
  if [[ -z "$PLATFORMS" ]]; then
    echo $(docker system info --format '{{"{{"}}.OSType{{"}}"}}/{{"{{"}}.Architecture{{"}}"}}')
  else
    echo "$PLATFORMS"
  fi

# Builds the an application image from the local repository.
build-local bin_name image_tag='kona:local':
  #!/bin/bash
  export BIN_TARGET="{{bin_name}}"
  export DEFAULT_TAG="{{image_tag}}"
  export PLATFORMS="$(just _docker_arch)"
  export REPO_LOCATION="local"

  (cd "$(git rev-parse --show-toplevel)" && docker buildx bake \
    --progress plain \
    -f docker/docker-bake.hcl \
    generic)

# Builds an application image from a remote revision.
build-remote bin_name git_tag='' image_tag='kona:local':
  #!/bin/bash
  export BIN_TARGET="{{bin_name}}"
  export DEFAULT_TAG="{{image_tag}}"
  export PLATFORMS="$(just _docker_arch)"
  export REPO_LOCATION="remote"

  # If no git tag is provided, use `main`
  if [[ -z "{{git_tag}}" ]]; then
    export GIT_REF_NAME="main"
  else
    export GIT_REF_NAME="{{git_tag}}"
  fi

  (cd "$(git rev-parse --show-toplevel)" && docker buildx bake \
    --progress plain \
    -f docker/docker-bake.hcl \
    generic)
